// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PropiedadesMinimalApi.Datos;

#nullable disable

namespace PropiedadesMinimalApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PropiedadesMinimalApi.Modelos.Propiedad", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activa")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Propiedad");

                    b.HasData(
                        new
                        {
                            id = 1,
                            activa = true,
                            descripcion = "Casa de campo en la montaña",
                            fechaCreacion = new DateTime(2025, 1, 14, 17, 9, 11, 701, DateTimeKind.Local).AddTicks(8604),
                            nombre = "Casa de campo",
                            ubicacion = "Montaña"
                        },
                        new
                        {
                            id = 2,
                            activa = true,
                            descripcion = "Casa de playa en la costa",
                            fechaCreacion = new DateTime(2025, 1, 14, 17, 9, 11, 701, DateTimeKind.Local).AddTicks(8645),
                            nombre = "Casa de playa",
                            ubicacion = "Costa"
                        },
                        new
                        {
                            id = 3,
                            activa = true,
                            descripcion = "Casa en la ciudad",
                            fechaCreacion = new DateTime(2025, 1, 14, 17, 9, 11, 701, DateTimeKind.Local).AddTicks(8648),
                            nombre = "Casa de ciudad",
                            ubicacion = "Ciudad"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
